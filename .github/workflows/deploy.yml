name: CI/CD Deploy via CloudFormation

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies for packaging
        run: |
          python -m pip install --upgrade pip
          pip install wheel
          pip install -r requirements.txt

      - name: Create app zip
        run: |
          ZIPFILE=app-${{ github.run_id }}.zip
          # include everything needed for runtime; exclude workflow and venv
          zip -r $ZIPFILE . -x ".git/*" ".github/*" "venv/*" "__pycache__/*"
          echo "ZIPFILE=$ZIPFILE" >> $GITHUB_ENV

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Upload ZIP to S3 and verify
        run: |
          set -eux
          aws s3 cp $ZIPFILE s3://${{ secrets.S3_BUCKET }}/$ZIPFILE
          echo "S3_KEY=$ZIPFILE" >> $GITHUB_ENV
          echo "Listing uploaded object:"
          aws s3 ls s3://${{ secrets.S3_BUCKET }}/$ZIPFILE

#      - name: Deploy CloudFormation stack
#        env:
#          STACK_NAME: ${{ secrets.STACK_NAME }}
#        run: |
#          AWS_REGION=${{ secrets.AWS_REGION }}
#          TEMPLATE=cloudformation.yml
#          # deploy (create or update) the CloudFormation stack, passing S3 bucket + key
#          aws cloudformation deploy \
#            --stack-name "$STACK_NAME" \
#            --template-file "$TEMPLATE" \
#            --capabilities CAPABILITY_NAMED_IAM \
#            --parameter-overrides S3Bucket=${{ secrets.S3_BUCKET }} S3Key=$ZIPFILE \
#            --region $AWS_REGION


      - name: Deploy CloudFormation stack (with debug)
        env:
          STACK_NAME: ${{ secrets.STACK_NAME }}
        run: |
          set -eux
          AWS_REGION=${{ secrets.AWS_REGION }}
          # correct template path
          TEMPLATE=infra/cloudformation.yml

          echo "=== WORKING DIR ==="
          pwd
          echo "=== LIST infra folder ==="
          ls -la infra || true

          echo "=== show template head ==="
          head -n 40 "$TEMPLATE" || true

          # show the ZIPFILE that was stored in GITHUB_ENV earlier
          echo "ZIPFILE='$ZIPFILE'"

          # deploy (create or update) the CloudFormation stack
          aws cloudformation deploy \
            --stack-name "$STACK_NAME" \
            --template-file "$TEMPLATE" \
            --capabilities CAPABILITY_NAMED_IAM \
            --parameter-overrides \
                S3Bucket=${{ secrets.S3_BUCKET }} \
                S3Key=$ZIPFILE \
                KeyName=hogwarts-key \
            --region $AWS_REGION


      - name: Output stack info
        run: |
          aws cloudformation describe-stacks --stack-name "${{ secrets.STACK_NAME }}" --region ${{ secrets.AWS_REGION }}

